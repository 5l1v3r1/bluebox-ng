
'use strict';

var Bluebox = require('bluebox-ng'),
    async   = require('async'),

    options       = {},
    finalReport   = {},
    bluebox       = new Bluebox(options),
    shodanKey = '',
    targetHost = '<Target Host IP>',
    moduleOptions = {
        ip : targetHost,
        target : targetHost,
        targets : targetHost,
        srcHost: 'iface:<The name of your network interface>'
    };


async.series([
    function(callback){
        
        var action = 'shodanHost';
        
        if (shodanKey) {
            bluebox.shodanKey = shodanKey;

            bluebox.runModule(action, moduleOptions, function (err, result) {
                if (err) {
                    callback(err);
                } else {
                    finalReport[action] = result;
                    callback(null);
                }
            });
        }
        else {
            console.error("No Shodan Key found.");
            callback(null);
        }
    },
    function(callback){
        
        var action = 'sipScan';
        bluebox.runModule(action, moduleOptions, function (err, result) {
            if (err) {
                callback(err);
            } else {
                finalReport[action] = result;
                callback(null);
            }
        });
    },
    function(callback){

        var action = 'exploitSearch';
        moduleOptions.query = finalReport['sipScan'][0].service + ' ' + finalReport['sipScan'][0].version;
        bluebox.runModule(action, moduleOptions, function (err, result) {
            if (err) {
                callback(err);
            } else {
                finalReport[action] = result;
                callback(null);
            }
        });
    },
    function(callback){

        var action = 'sipBruteExt100';
        bluebox.runModule(action, moduleOptions, function (err, result) {
            if (err) {
                callback(err);
            } else {
                if (result.vulnerable) {
                    console.log('The host is vulnerable to CVE-2011-2536 / AST-2011-011')
                }
                else {
                    console.log('The host is NOT vulnerable to CVE-2011-2536 / AST-2011-011')
                }
                finalReport[action] = result;
                callback(null);
            }
        });
    },
    function(callback){

        var action = 'sipBruteExt404';
        bluebox.runModule(action, moduleOptions, function (err, result) {
            if (err) {
                callback(err);
            } else {
                if (result.vulnerable) {
                    console.log('The host is vulnerable to CVE-2009-3727 / AST-2009-008')
                }
                else {
                    console.log('The host is NOT vulnerable to CVE-2009-3727 / AST-2009-008')
                }
                finalReport[action] = result;
                callback(null);
            }
        });
    },
    function(callback){

        var action = 'sipUnauthCall';
        bluebox.runModule(action, moduleOptions, function (err, result) {
            if (err) {
                callback(err);
            } else {
                if (result.vulnerable) {
                    console.log('[sipUnauthCall] Host vulnerable');
                }
                finalReport[action] = result;
                callback(null);
            }
        });
    }
],

function(err){

    if (err) {
        console.error(err);
    }
    else {
        console.log(finalReport);
    }
});
